%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ft=erlang ts=4 sw=4 et

%% generate a default test/t11/src/srcdir_test.hrl file so rebar can
%% compile the tests
ok = file:write_file("test/t11/src/srcdir_test.hrl",
                     <<"-define(SRCDIR_VERSION, \"1.0\").\n">>),

%% generate an empty priv/charset.def file
ok = file:write_file("priv/charset.def", <<>>),

SoapDeps = [{erlsom, ".*", {git, "git://github.com/willemdj/erlsom.git", {branch, "master"}}},
            {xmlrpc, ".*", {git, "git://github.com/rwbr/exmlrpc.git", {branch, "master"}}}],

Cfg0 = case os:getenv("YAWS_SOAP") of
           false ->
               CONFIG;
           _ ->
               case lists:keyfind(deps, 1, CONFIG) of
                   {deps, Deps} ->
                       NDeps = Deps ++ SoapDeps,
                       lists:keyreplace(deps, 1, CONFIG, {deps, NDeps});
                   false ->
                       CONFIG ++ [{deps, SoapDeps}]
               end
       end,

ErlOpts0 = case lists:keyfind(erl_opts, 1, Cfg0) of
               {erl_opts, EOpts} -> EOpts;
               false             -> []
           end,
PortEnv0 = case lists:keyfind(port_env, 1, Cfg0) of
               {port_env, PEnv} -> PEnv;
               false            -> []
           end,
PortSpecs0 = case lists:keyfind(port_specs, 1, Cfg0) of
                 {port_specs, PSpecs} -> PSpecs;
                 false                -> []
             end,

code:ensure_loaded(file),
ErlOpts1 = case erlang:function_exported(file,sendfile,5) of
               true  -> ErlOpts0 ++ [{d,'HAVE_ERLANG_SENDFILE'}];
               false -> ErlOpts0
           end,

code:ensure_loaded(crypto),
ErlOpts2 = case erlang:function_exported(crypto,hash,2) of
               true  -> ErlOpts1 ++ [{d,'HAVE_CRYPTO_HASH'}];
               false -> ErlOpts1
           end,

HaveSendFile = lists:keymember('HAVE_SENDFILE', 3, ErlOpts2),

{PortEnv1, PortSpecs1} =
    if
        HaveSendFile ->
            {PortEnv0 ++ [{"DRV_CFLAGS", "$DRV_CFLAGS -DHAVE_SENDFILE"}],
             PortSpecs0 ++ [{"priv/lib/yaws_sendfile_drv.so",
                             ["c_src/yaws_sendfile_drv.c", "c_src/hashtable.c"]}]};

        true ->
            {PortEnv0, PortSpecs0}
    end,

Cfg1 = lists:keyreplace(erl_opts, 1, Cfg0, {erl_opts, ErlOpts2}),
Cfg2 = lists:keyreplace(port_env, 1, Cfg1, {port_env, PortEnv1}),
Cfg3 = lists:keyreplace(port_specs, 1, Cfg2, {port_specs, PortSpecs1}),
Cfg3.

