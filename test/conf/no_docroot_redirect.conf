

logdir = ./logs

# This the path to a directory where additional
# beam code can be placed. The daemon will add this
# directory to its search path

ebin_dir = %YTOP%/test/ibrowse/ebin
include_dir = %YTOP%/test/include



# This is a debug variable, possible values are http | traffic | false
# It is also possible to set the trace (possibly to the tty) while
# invoking yaws from the shell as in
# yaws -i -T -x (see man yaws)

trace = false



# it is possible to have yaws start additional
# application specific code at startup
#
# runmod = mymodule


# By default yaws will copy the erlang error_log and
# end write it to a wrap log called report.log (in the logdir)
# this feature can be turned off. This would typically
# be the case when yaws runs within another larger app

copy_error_log = true


# Logs are wrap logs

log_wrap_size = 1000000


# Possibly resolve all hostnames in logfiles so webalizer
# can produce the nice geography piechart

log_resolve_hostname = false



# fail completely or not if yaws fails
# to bind a listen socket
fail_on_bind_err = true



# If yaws is started as root, it can, once it has opened
# all relevant sockets for listening, change the uid to a
# user with lower accessrights than root

# username = nobody


# If HTTP auth is used, it is possible to have a specific
# auth log.
# Deprecated and ignored. Now, this target must be set in server part
#auth_log = true


# When we're running multiple yaws systems on the same
# host, we need to give each yaws system an individual
# name. Yaws will write a number of runtime files under
# /tmp/yaws/${id}
# The default value is "default"


# id = myname


# earlier versions of Yaws picked the first virtual host
# in a list of hosts with the same IP/PORT when the Host:
# header doesn't match any name on any Host
# This is often nice in testing environments but not
# acceptable in real live hosting scenarios

pick_first_virthost_on_nomatch = true


# All unices are broken since it's not possible to bind to
# a privileged port (< 1024) unless uid==0
# There is a contrib in jungerl which makes it possible by means
# of an external setuid root programm called fdsrv to listen to
# to privileged port.
# If we use this feature, it requires fdsrv to be properly installed.
# Doesn't yet work with SSL.

use_fdsrv = false

keepalive_timeout = 10000

<server rd>
    listen = 0.0.0.0
    port = 8000
    <redirect>
        "/" == http://yaws.hyber.org/
    </redirect>
</server>
